/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package tree;

import tree.Nodes.Node;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        System.out.println(new App().getGreeting());

        BinaryTree<String> binaryTree = new BinaryTree<>();
        //Root
        binaryTree.setRoot(new Node<String >("A"));
        //level 1
        binaryTree.getRoot().setLeftNode(new  Node<String >("B"));
        binaryTree.getRoot().setRightNode(new  Node<String >("C"));
        //level 2
        binaryTree.getRoot().getLeftNode().setLeftNode(new Node<String>("D"));
        binaryTree.getRoot().getLeftNode().setRightNode(new Node<String>("E"));
        binaryTree.getRoot().getRightNode().setLeftNode(new Node<String>("F"));
        System.out.println(binaryTree);
        System.out.println("Pre Order Array => "+binaryTree.PreOrder());
        System.out.println("In Order Array => "+binaryTree.InOrder());
        System.out.println("Post Order Array => "+binaryTree.PostOrder());
/////////////////////////////////////////////
        System.out.println(" /////////////// Binary Search Tree ///////////////");
        BinarySearchTree<Integer> binarySearchTree = new BinarySearchTree<>();
        binarySearchTree.add(100);
        binarySearchTree.add(2);
        binarySearchTree.add(20);
        binarySearchTree.add(200);
        System.out.println(binarySearchTree);
        System.out.println("Pre Order Array => "+binarySearchTree.PreOrder());
        System.out.println("In Order Array => "+binarySearchTree.InOrder());
        System.out.println("Post Order Array => "+binarySearchTree.PostOrder());

        System.out.println("Must Return True => "+binarySearchTree.contains(100));
        System.out.println("Must Return False => "+binarySearchTree.contains(1));
////////////////////////////////

    }
}
